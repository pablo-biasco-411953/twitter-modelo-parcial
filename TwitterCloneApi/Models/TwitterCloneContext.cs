// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace TwitterCloneApi.Models;

public partial class TwitterCloneContext : DbContext
{
    public TwitterCloneContext(DbContextOptions<TwitterCloneContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Country> Countries { get; set; }

    public virtual DbSet<Tweet> Tweets { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Country>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Countrie__3213E83FFC408908");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Country1)
                .IsRequired()
                .HasColumnName("country");
        });

        modelBuilder.Entity<Tweet>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Tweets__3213E83F255791C2");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Content)
                .IsRequired()
                .HasColumnName("content");
            entity.Property(e => e.IdUser).HasColumnName("id_user");
            entity.Property(e => e.IsPublic).HasColumnName("isPublic");
            entity.Property(e => e.PublishDatetime)
                .HasColumnType("datetime")
                .HasColumnName("publish_datetime");

            entity.HasOne(d => d.IdUserNavigation).WithMany(p => p.Tweets)
                .HasForeignKey(d => d.IdUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Tweets__id_user__2EDAF651");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Users__3213E83F26D92017");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCountry).HasColumnName("id_country");
            entity.Property(e => e.IsActive).HasColumnName("isActive");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasColumnName("username");

            entity.HasOne(d => d.IdCountryNavigation).WithMany(p => p.Users)
                .HasForeignKey(d => d.IdCountry)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Users__id_countr__2BFE89A6");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}